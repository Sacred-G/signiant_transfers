fileSearchRequest schema


{
query*	fileSearchRequest_query{
path*	string
example: file-name

Search term used when searching for a specific file and path included as part of a job. Search terms must be at least two characters in length.
}
filters*	fileSearchRequest_filters{
description:	

A set of filters to be applied to the file search request
jobId	{
description:	

Scope the search to an array of jobIds.
oneOf ->	
string($uuid)
example: d3de0ccc-9d58-4251-b845-698383cac940
[
example: List [ "d3de0ccc-9d58-4251-b845-698383cac941", "d3de0ccc-1234-4251-b845-698383cac942", "d3de0ccc-9d58-4251-1234-698383cac943" ]
string($uuid)]
}
serviceId	string($uuid)
example: da030926-f28f-4be1-a96a-3f1ad747b15a

Restrict the search to files for the given serviceId, if present jobId can be omitted
state	string

Restrict the search to files in the given state. If this value is omitted, it will be defaulted to TRANSFERRED.
Enum:
[ TRANSFERRED, ERROR ]
}
limit	integer
maximum: 10000
minimum: 0
default: 100

The maximum number of results to return. If not provided, the default is 100 results.
counts	fileSearchRequest_counts{
description:	

A set of parameters to be used to trigger composite aggregation
countSize	integer($uuid)
minimum: 1
default: 1000

Dictates the number of aggregated job counts returned per request.
countAfter	string($byte)
example: U3dhZ2dlciByb2Nrcw==

A base64 url encoded string that acts as a cursor for pagination. When received as the after key in the response of one request, can be passed in as the countAfter of the next request to get the next page of results.
countBy	string

Include aggregated counts in the response. The aggregation will be performed on the key provided. If not provided, no aggregated counts will be in the response.
Enum:
[ jobId ]
}
}
QueryStrategystringEnum:
[ prefix_match, fuzzy_match ]
FileSearchResult_metadata{
score	number($float)
example: 9.861248

The search result relevancy score
matchedQueryStrategies	[
example: List [ "prefix_match", "fuzzy_match" ]

Which query strategies caused this result to be included in the response
QueryStrategystringEnum:
[ prefix_match, fuzzy_match ]]
}
fileSearchRequest_query{
path*	string
example: file-name

Search term used when searching for a specific file and path included as part of a job. Search terms must be at least two characters in length.
}
fileSearchRequest_filters
fileSearchRequest_counts
fileSearchResults{
totalResultCount	integer
example: 5000

The estimated total number of results matching the query, which can be far more than what is returned in this response. This value should be accurate up to 10,000 results, beyond which, it will be approximate. For more information consult this page
returnedItemCount	integer
example: 3

The number of results returned. This may be less than the totalResultCount depending on the "limit" in the request.
items	[FileSearchResult{
lastModifiedOn	string($date-time)
example: 2018-12-17T12:43:12.432Z

The timestamp of when the file record was last updated.
fileId	string($uuid)
example: da030926-f28f-4be1-a96a-3f1ad747b15a

A unique identifier for this file which may be used to update its information in Elasticsearch.
jobId	string($uuid)
example: da030926-f28f-4be1-a96a-3f1ad747b15a
url	string
example: file:///path/to/file

The url of the file that was found. For a shared job when the partner searches the files, the url will be the relative path without a file:// prefix.
state	string

The state of the file that may or may not have been transferred. We only support searching for successfully transferred files at this point in time.
Enum:
[ TRANSFERRED, ERROR ]
metadata	FileSearchResult_metadata{
score	number($float)
example: 9.861248

The search result relevancy score
matchedQueryStrategies	[
example: List [ "prefix_match", "fuzzy_match" ]

Which query strategies caused this result to be included in the response
QueryStrategystringEnum:
[ prefix_match, fuzzy_match ]]
}
}]
counts	[

An array of objects corresponding to the aggregated counts.
{
oneOf ->	
{
jobId	[...]
count	[...]
}
}]
after	string($byte)
example: U3dhZ2dlciByb2Nrcw==

A base 64 url encoded string that acts as a paginated cursor. When received in a response, can be passed into the next request as the countAfter to return the next page of results. An after key will be returned even on the last page of results. One extra call will be needed to confirm that we've reached the end of results, in which case there will be no after key in the response.
}
FileSearchResult{
lastModifiedOn	string($date-time)
example: 2018-12-17T12:43:12.432Z

The timestamp of when the file record was last updated.
fileId	string($uuid)
example: da030926-f28f-4be1-a96a-3f1ad747b15a

A unique identifier for this file which may be used to update its information in Elasticsearch.
jobId	string($uuid)
example: da030926-f28f-4be1-a96a-3f1ad747b15a
url	string
example: file:///path/to/file

The url of the file that was found. For a shared job when the partner searches the files, the url will be the relative path without a file:// prefix.
state	string

The state of the file that may or may not have been transferred. We only support searching for successfully transferred files at this point in time.
Enum:
[ TRANSFERRED, ERROR ]
metadata	FileSearchResult_metadata{
score	number($float)
example: 9.861248

The search result relevancy score
matchedQueryStrategies	[
example: List [ "prefix_match", "fuzzy_match" ]

Which query strategies caused this result to be included in the response
QueryStrategystringEnum:
[ prefix_match, fuzzy_match ]]
}
}